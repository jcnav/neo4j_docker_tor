version: '3'

services:
  # docker run --publish=7474:7474 --publish=7687:7687 --volume=$HOME/neo4j/data:/data arm64v8/neo4j
  # You must install manually the plugins
  # https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/4.4.0.9/apoc-4.4.0.9-all.jar
  # For gds plugin compatibility table
  # https://neo4j.com/docs/graph-data-science/current/installation/supported-neo4j-versions/

  neo4j:
    image: neo4j:4.4.23
    # image: neo4j:5.9.0
    hostname: neo4j
    # image: neo4j:4.4.0
#    healthcheck:
#      # test: [ "CMD", "curl", "-f", "http://localhost:7474/" ]
#      test: ["CMD-SHELL", "/var/lib/neo4j/bin/neo4j status"]
#      interval: 60s
#      timeout: 10s
#      retries: 3
    container_name: neo4j_db
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - ./neo4j_db/conf:/conf
      - ./neo4j_db/data:/data
      - ./neo4j_db/import:/import
      - ./neo4j_db/logs:/logs
      - ./neo4j_db/plugins:/plugins
    environment:
      - NEO4J_AUTH=neo4j/crawler8
      # Raise memory limits v 5.0.0
      # - NEO4J_server_memory_pagecache_size=1G
      # - NEO4J_server_memory_heap_initial__size=1G
      # - NEO4J_server_memory_heap_max__size=1G
      # Raise memory limits
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=1G
      # Import/export DB options
      - NEO4J_dbms.directories.import=import
      - NEO4J_dbms.security.allow_csv_import_from_file_urls=true

      # APOC install
      # - NEO4J_PLUGINS='["apoc"]'       # For >= 5.0.0
      - NEO4JLABS_PLUGINS='["apoc", "graph-data-science"]' # For < 5.0.0
      - NEO4J_dbms.security.procedures.allowlist=bloom.*,apoc.*,gds.*,streams.*
      - NEO4J_dbms.security.procedures.whitelist=bloom.*,apoc.*,gds.*,streams.*
      - NEO4J_dbms.security.procedures.unrestricted=apoc.\\\*,gds.\\\*
      # APOC enable import/export data
      - NEO4J_apoc.export.file.enabled=true
      - NEO4J_apoc.import.file.enabled=true
    networks:
      - neo4j_network

  neodash:
    image: nielsdejong/neodash:latest
    hostname: neodash
    container_name: neodash_dashboard
    ports:
      - 5005:5005
#    volumes:
#      - ./conf:/conf
    networks:
      - neo4j_network
    depends_on:
      - neo4j

  delete_db:
    container_name: delete_db
    build:
      dockerfile: ./neo4j_operations/dockerfile.clean_db
    restart: "no"
    env_file:
      - db.env
    networks:
      - neo4j_network
    depends_on:
      - neo4j


#  neo4j_provision_i2p:
#    container_name: neo4j_provision_i2p
#    build:
#      dockerfile: ./neo4j_operations/dockerfile.provision_darknet
#    env_file:
#      - db.env
#      - i2p.env
##    environment:
##      - CSV_NODES=./csv/i2p_results.csv
#    networks:
#      - neo4j_network
#    depends_on:
#      - neo4j

  neo4j_provision_tor:
    container_name: neo4j_provision_tor
    build:
      dockerfile: ./neo4j_operations/dockerfile.provision_darknet
    restart: "no"
    env_file:
      - db.env
      - tor.env
    # environment:
    #   - CSV_NODES=./csv/tor_results.csv
    networks:
      - neo4j_network
    depends_on:
      - neo4j

  neo4j_provision_market_btc:
    container_name: neo4j_provision_market_btc
    build:
      dockerfile: ./neo4j_operations/dockerfile.provision_market_btc
    restart: "no"
    env_file:
      - db.env
      - market_btc.env
    # environment:
    #   - CSV_NODES=./csv/tor_results.csv
    networks:
      - neo4j_network
    depends_on:
      - neo4j

networks:
  neo4j_network:
    name: neo4j_network
    driver: bridge
